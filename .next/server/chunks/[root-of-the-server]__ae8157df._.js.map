{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/nanasasu/docm-web-standalone/src/lib/supabase.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\n\n// Server-side Supabase client for API routes\nexport const createServerSupabaseClient = () => {\n  const url = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n  \n  if (!url || !key) {\n    throw new Error('Supabase environment variables not configured')\n  }\n  \n  return createServerClient(\n    url,\n    key,\n  {\n    cookies: {\n        get() {\n          return null\n      },\n        set() {\n          // No-op for API routes\n      },\n        remove() {\n          // No-op for API routes\n      },\n    },\n  }\n)\n}\n\n// Types for the website (focusing on public-facing data)\nexport type Contact = {\n  id: string\n  first_name: string | null\n  last_name: string | null\n  phone: string | null\n  email: string | null\n  profile_image: string | null\n  lifecycle: string\n  created_at: string\n  updated_at: string\n}\n\nexport type Event = {\n  id: string\n  name: string\n  description: string | null\n  location: string | null\n  capacity: number | null\n  event_date: string\n  is_recurring: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport type EventImage = {\n  id: string\n  event_id: string\n  url: string\n  alt_text: string | null\n  sort_order: number\n  created_at: string\n}\n\nexport type EventRegistration = {\n  id: string\n  event_id: string\n  contact_id: string\n  status: string\n  created_at: string\n  updated_at: string\n}\n\nexport type Database = {\n  public: {\n    Tables: {\n      'contacts': {\n        Row: Contact\n        Insert: Omit<Contact, 'id' | 'created_at' | 'updated_at'>\n        Update: Partial<Omit<Contact, 'id' | 'created_at' | 'updated_at'>>\n      }\n    }\n  },\n  events: {\n    Tables: {\n      'events': {\n        Row: Event\n        Insert: Omit<Event, 'id' | 'created_at' | 'updated_at'>\n        Update: Partial<Omit<Event, 'id' | 'created_at' | 'updated_at'>>\n      },\n      'event_images': {\n        Row: EventImage\n        Insert: Omit<EventImage, 'id' | 'created_at'>\n        Update: Partial<Omit<EventImage, 'id' | 'created_at'>>\n      },\n      'registrations': {\n        Row: EventRegistration\n        Insert: Omit<EventRegistration, 'id' | 'created_at' | 'updated_at'>\n        Update: Partial<Omit<EventRegistration, 'id' | 'created_at' | 'updated_at'>>\n      }\n    }\n  }\n} "],"names":[],"mappings":";;;AAAA;AAAA;;AAGO,MAAM,6BAA6B;IACxC,MAAM;IACN,MAAM;IAEN,uCAAkB;;IAElB;IAEA,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,EACtB,KACA,KACF;QACE,SAAS;YACL;gBACE,OAAO;YACX;YACE;YACE,uBAAuB;YAC3B;YACE;YACE,uBAAuB;YAC3B;QACF;IACF;AAEF","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/nanasasu/docm-web-standalone/src/app/api/footer/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { createServerSupabaseClient } from '@/lib/supabase'\n\n// Default footer content when database is not available\nconst getDefaultFooter = async (supabase?: any) => {\n  let logoUrl: string | undefined\n\n  // Try to get logo from tenant settings as fallback\n  if (supabase) {\n    try {\n      const { data: tenantSettings } = await supabase\n        .from('tenant_settings')\n        .select('logo_url, logo_web_url, logo_white_url')\n        .single()\n      \n      if (tenantSettings) {\n        logoUrl = tenantSettings.logo_web_url || tenantSettings.logo_white_url || tenantSettings.logo_url\n      }\n    } catch (error) {\n      console.log('Could not fetch tenant logo for footer fallback:', error)\n    }\n  }\n\n  return {\n    enabled: true,\n    layout: 'columns',\n    backgroundColor: '#1f2937',\n    textColor: '#ffffff',\n    showChurchLogo: true,\n    logoUrl,\n    showCopyright: true,\n    copyrightText: '¬© 2024 DOCM Church. All rights reserved.',\n    sections: [\n      {\n        id: 'church-info',\n        title: 'DOCM Church',\n        type: 'custom',\n        content: {\n          description: 'Building a community of faith that transforms lives through God\\'s love, worship, and service to others.',\n          showSocial: true,\n          socialLinks: [\n            { platform: 'facebook', url: '#', enabled: true },\n            { platform: 'instagram', url: '#', enabled: true },\n            { platform: 'youtube', url: '#', enabled: true }\n          ]\n        },\n        order: 1,\n        enabled: true\n      },\n      {\n        id: 'quick-links',\n        title: 'Quick Links',\n        type: 'links',\n        content: {\n          links: [\n            { id: '1', label: 'About Us', url: '/about', external: false, enabled: true },\n            { id: '2', label: 'Ministries', url: '/ministries', external: false, enabled: true },\n            { id: '3', label: 'Events', url: '/events', external: false, enabled: true },\n            { id: '4', label: 'Sermons', url: '/sermons', external: false, enabled: true },\n            { id: '5', label: 'Contact', url: '/contact', external: false, enabled: true },\n            { id: '6', label: 'Give', url: '/give', external: false, enabled: true }\n          ]\n        },\n        order: 2,\n        enabled: true\n      },\n      {\n        id: 'ministries',\n        title: 'Ministries',\n        type: 'links',\n        content: {\n          links: [\n            { id: '1', label: 'Children\\'s Ministry', url: '/ministries/children', external: false, enabled: true },\n            { id: '2', label: 'Youth Ministry', url: '/ministries/youth', external: false, enabled: true },\n            { id: '3', label: 'Worship Team', url: '/ministries/worship', external: false, enabled: true },\n            { id: '4', label: 'Community Outreach', url: '/ministries/outreach', external: false, enabled: true }\n          ]\n        },\n        order: 3,\n        enabled: true\n      },\n      {\n        id: 'contact',\n        title: 'Contact & Service Times',\n        type: 'contact',\n        content: {\n          address: '123 Church Street\\nCity, State 12345',\n          phone: '(555) 123-4567',\n          email: 'info@docmchurch.com',\n          serviceTimes: [\n            'Sunday: 9:00 AM & 11:00 AM',\n            'Wednesday: 7:00 PM',\n            'Friday Youth: 7:00 PM'\n          ]\n        },\n        order: 4,\n        enabled: true\n      },\n      {\n        id: 'app-download',\n        title: 'Download Our App',\n        type: 'app_download',\n        content: {\n          iosUrl: '#',\n          androidUrl: '#',\n          description: 'Stay connected with our church community. Get sermon notes, event updates, and more.'\n        },\n        order: 5,\n        enabled: true\n      }\n    ]\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Environment check - same pattern as homepage API\n    if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n      console.log('üîÑ FOOTER SOURCE: DEFAULT (Supabase not configured)')\n      const defaultFooter = await getDefaultFooter()\n      return NextResponse.json({ \n        footer: defaultFooter,\n        source: 'default',\n        message: 'Using default footer - Supabase not configured'\n      })\n    }\n\n    let supabase\n    try {\n      supabase = createServerSupabaseClient()\n    } catch (error) {\n      console.log('üîÑ FOOTER SOURCE: DEFAULT (Supabase client creation failed)')\n      const defaultFooter = await getDefaultFooter()\n      return NextResponse.json({ \n        footer: defaultFooter,\n        source: 'default',\n        message: 'Using default footer - Supabase client failed'\n      })\n    }\n\n    // Fetch footer settings from database\n    console.log('üîç Attempting to fetch footer settings from database...')\n    \n    const { data: footerSettings, error: footerError } = await supabase\n      .from('footer_settings')\n      .select('*')\n      .single()\n\n    if (footerError || !footerSettings) {\n      console.log('üîÑ FOOTER SOURCE: DEFAULT (No footer settings found)')\n      console.log('Footer error:', footerError?.message)\n      const defaultFooter = await getDefaultFooter(supabase)\n      return NextResponse.json({ \n        footer: defaultFooter,\n        source: 'default',\n        message: 'Using default footer - No footer settings found in database'\n      })\n    }\n\n    console.log('‚úÖ FOOTER SOURCE: DATABASE')\n    console.log('Footer settings found:', footerSettings)\n\n    // Convert database format to component format (snake_case to camelCase)\n    const footer = {\n      enabled: footerSettings.enabled,\n      layout: footerSettings.layout,\n      backgroundColor: footerSettings.background_color,\n      textColor: footerSettings.text_color,\n      showChurchLogo: footerSettings.show_church_logo,\n      logoUrl: footerSettings.logo_url,\n      showCopyright: footerSettings.show_copyright,\n      copyrightText: footerSettings.copyright_text,\n      sections: footerSettings.sections || []\n    }\n\n    return NextResponse.json({\n      footer,\n      source: 'database',\n      message: 'Footer loaded from database'\n    })\n\n  } catch (error) {\n    console.error('Footer API error:', error)\n    const defaultFooter = await getDefaultFooter()\n    return NextResponse.json({ \n      footer: defaultFooter,\n      source: 'default',\n      message: `Using default footer - API error: ${error instanceof Error ? error.message : 'Unknown error'}`\n    })\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}