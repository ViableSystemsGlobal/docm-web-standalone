{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nanasasu/docm-web-standalone/src/app/apple-icon.tsx"],"sourcesContent":["import { ImageResponse } from 'next/og'\nimport { createServerSupabaseClient } from '@/lib/supabase'\n\n// Route segment config\nexport const runtime = 'edge'\n\n// Image metadata\nexport const size = {\n  width: 180,\n  height: 180,\n}\nexport const contentType = 'image/png'\n\n// Image generation\nexport default async function AppleIcon() {\n  try {\n    const supabase = createServerSupabaseClient()\n    \n    // Get the black logo URL from tenant settings\n    const { data: settings, error } = await supabase\n      .from('tenant_settings')\n      .select('logo_black_url, logo_url, name')\n      .limit(1)\n      .single()\n\n    console.log('üçé Apple Icon: Tenant settings:', { \n      logo_black_url: settings?.logo_black_url,\n      logo_url: settings?.logo_url, \n      name: settings?.name,\n      error \n    })\n\n    // Handle RLS errors gracefully - if we can't access tenant settings, use fallback\n    let logoUrl: string | undefined = undefined\n    let churchName = 'Church'\n\n    if (!error && settings) {\n      // Always prefer black logo if available\n      logoUrl = settings.logo_black_url && settings.logo_black_url.trim() !== '' \n        ? settings.logo_black_url \n        : settings.logo_url\n      churchName = settings.name || 'Church'\n    } else {\n      // RLS blocked or no settings - use hardcoded values we know from previous testing\n      logoUrl = 'https://ufjfafcfkalaasdhgcbi.supabase.co/storage/v1/object/public/church-logos/logo-1749507248987.png'\n      churchName = 'Demonstration of Christ Ministries'\n    }\n\n    console.log('üé® Apple Icon: Using logo URL:', logoUrl)\n\n    if (logoUrl && logoUrl.trim() !== '') {\n      console.log('‚úÖ Apple Icon: Generating with logo')\n      \n      // Use the logo image\n      return new ImageResponse(\n        (\n          <div\n            style={{\n              background: 'white',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: '20px',\n              padding: '20px',\n            }}\n          >\n            {/* eslint-disable-next-line @next/next/no-img-element */}\n            <img\n              src={logoUrl}\n              alt=\"Church Logo\"\n              width=\"140\"\n              height=\"140\"\n              style={{\n                objectFit: 'contain',\n                maxWidth: '140px',\n                maxHeight: '140px',\n              }}\n            />\n          </div>\n        ),\n        {\n          ...size,\n        }\n      )\n    } else {\n      console.log('üîÑ Apple Icon: No logo URL found, using church initial fallback')\n      // Fallback to church initial if no logo\n      const initial = churchName.charAt(0).toUpperCase()\n      \n      return new ImageResponse(\n        (\n          <div\n            style={{\n              fontSize: 100,\n              background: '#1A202C',\n              color: 'white',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              borderRadius: '20px',\n            }}\n          >\n            {initial}\n          </div>\n        ),\n        {\n          ...size,\n        }\n      )\n    }\n  } catch (error) {\n    console.error('‚ùå Apple Icon: Error generating apple icon:', error)\n    \n    // Ultimate fallback\n    return new ImageResponse(\n      (\n        <div\n          style={{\n            fontSize: 100,\n            background: '#1A202C',\n            color: 'white',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontWeight: 'bold',\n            borderRadius: '20px',\n          }}\n        >\n          ‚õ™\n        </div>\n      ),\n      {\n        ...size,\n      }\n    )\n  }\n} "],"names":[],"mappings":";;;;;;;AAAA;AACA;;;;AAGO,MAAM,UAAU;AAGhB,MAAM,OAAO;IAClB,OAAO;IACP,QAAQ;AACV;AACO,MAAM,cAAc;AAGZ,eAAe;IAC5B,IAAI;QACF,MAAM,WAAW,CAAA,GAAA,sHAAA,CAAA,6BAA0B,AAAD;QAE1C,8CAA8C;QAC9C,MAAM,EAAE,MAAM,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,SACrC,IAAI,CAAC,mBACL,MAAM,CAAC,kCACP,KAAK,CAAC,GACN,MAAM;QAET,QAAQ,GAAG,CAAC,mCAAmC;YAC7C,gBAAgB,UAAU;YAC1B,UAAU,UAAU;YACpB,MAAM,UAAU;YAChB;QACF;QAEA,kFAAkF;QAClF,IAAI,UAA8B;QAClC,IAAI,aAAa;QAEjB,IAAI,CAAC,SAAS,UAAU;YACtB,wCAAwC;YACxC,UAAU,SAAS,cAAc,IAAI,SAAS,cAAc,CAAC,IAAI,OAAO,KACpE,SAAS,cAAc,GACvB,SAAS,QAAQ;YACrB,aAAa,SAAS,IAAI,IAAI;QAChC,OAAO;YACL,kFAAkF;YAClF,UAAU;YACV,aAAa;QACf;QAEA,QAAQ,GAAG,CAAC,kCAAkC;QAE9C,IAAI,WAAW,QAAQ,IAAI,OAAO,IAAI;YACpC,QAAQ,GAAG,CAAC;YAEZ,qBAAqB;YACrB,OAAO,IAAI,0HAAA,CAAA,gBAAa,eAEpB,8OAAC;gBACC,OAAO;oBACL,YAAY;oBACZ,OAAO;oBACP,QAAQ;oBACR,SAAS;oBACT,YAAY;oBACZ,gBAAgB;oBAChB,cAAc;oBACd,SAAS;gBACX;0BAGA,cAAA,8OAAC;oBACC,KAAK;oBACL,KAAI;oBACJ,OAAM;oBACN,QAAO;oBACP,OAAO;wBACL,WAAW;wBACX,UAAU;wBACV,WAAW;oBACb;;;;;;;;;;sBAIN;gBACE,GAAG,IAAI;YACT;QAEJ,OAAO;YACL,QAAQ,GAAG,CAAC;YACZ,wCAAwC;YACxC,MAAM,UAAU,WAAW,MAAM,CAAC,GAAG,WAAW;YAEhD,OAAO,IAAI,0HAAA,CAAA,gBAAa,eAEpB,8OAAC;gBACC,OAAO;oBACL,UAAU;oBACV,YAAY;oBACZ,OAAO;oBACP,OAAO;oBACP,QAAQ;oBACR,SAAS;oBACT,YAAY;oBACZ,gBAAgB;oBAChB,YAAY;oBACZ,cAAc;gBAChB;0BAEC;;;;;sBAGL;gBACE,GAAG,IAAI;YACT;QAEJ;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8CAA8C;QAE5D,oBAAoB;QACpB,OAAO,IAAI,0HAAA,CAAA,gBAAa,eAEpB,8OAAC;YACC,OAAO;gBACL,UAAU;gBACV,YAAY;gBACZ,OAAO;gBACP,OAAO;gBACP,QAAQ;gBACR,SAAS;gBACT,YAAY;gBACZ,gBAAgB;gBAChB,YAAY;gBACZ,cAAc;YAChB;sBACD;;;;;kBAIH;YACE,GAAG,IAAI;QACT;IAEJ;AACF","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/nanasasu/docm-web-standalone/src/app/apple-icon--metadata.js"],"sourcesContent":["import { contentType, runtime, size } from \"./apple-icon.tsx\"\nimport { fillMetadataSegment } from 'next/dist/lib/metadata/get-metadata-route'\n\nconst imageModule = { contentType, runtime, size }\n\nexport default async function (props) {\n    const { __metadata_id__: _, ...params } = await props.params\n    const imageUrl = fillMetadataSegment(\"/\", params, \"apple-icon\")\n\n    const { generateImageMetadata } = imageModule\n\n    function getImageMetadata(imageMetadata, idParam) {\n        const data = {\n            alt: imageMetadata.alt,\n            type: imageMetadata.contentType || 'image/png',\n            url: imageUrl + (idParam ? ('/' + idParam) : '') + \"?5dbc588eb179b107\",\n        }\n        const { size } = imageMetadata\n        if (size) {\n            data.sizes = size.width + \"x\" + size.height;\n        }\n        return data\n    }\n\n    if (generateImageMetadata) {\n        const imageMetadataArray = await generateImageMetadata({ params })\n        return imageMetadataArray.map((imageMetadata, index) => {\n            const idParam = (imageMetadata.id || index) + ''\n            return getImageMetadata(imageMetadata, idParam)\n        })\n    } else {\n        return [getImageMetadata(imageModule, '')]\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,cAAc;IAAE,aAAA,4HAAA,CAAA,cAAW;IAAE,SAAA,4HAAA,CAAA,UAAO;IAAE,MAAA,4HAAA,CAAA,OAAI;AAAC;AAElC,8CAAgB,KAAK;IAChC,MAAM,EAAE,iBAAiB,CAAC,EAAE,GAAG,QAAQ,GAAG,MAAM,MAAM,MAAM;IAC5D,MAAM,WAAW,CAAA,GAAA,2KAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,QAAQ;IAElD,MAAM,EAAE,qBAAqB,EAAE,GAAG;IAElC,SAAS,iBAAiB,aAAa,EAAE,OAAO;QAC5C,MAAM,OAAO;YACT,KAAK,cAAc,GAAG;YACtB,MAAM,cAAc,WAAW,IAAI;YACnC,KAAK,WAAW,CAAC,UAAW,MAAM,UAAW,EAAE,IAAI;QACvD;QACA,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,IAAI,MAAM;YACN,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,MAAM,KAAK,MAAM;QAC/C;QACA,OAAO;IACX;IAEA,IAAI,uBAAuB;QACvB,MAAM,qBAAqB,MAAM,sBAAsB;YAAE;QAAO;QAChE,OAAO,mBAAmB,GAAG,CAAC,CAAC,eAAe;YAC1C,MAAM,UAAU,CAAC,cAAc,EAAE,IAAI,KAAK,IAAI;YAC9C,OAAO,iBAAiB,eAAe;QAC3C;IACJ,OAAO;QACH,OAAO;YAAC,iBAAiB,aAAa;SAAI;IAC9C;AACJ","debugId":null}}]
}