{"version":3,"file":"app/icon/route.js","mappings":"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","sources":["webpack://_N_E/./src/app/icon.tsx","webpack://_N_E/?2897","webpack://_N_E/./src/app/icon.tsx?4898","webpack://_N_E/?86d0","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/","webpack://_N_E/./src/lib/supabase.ts","webpack://_N_E/?2814"],"sourcesContent":["import { ImageResponse } from 'next/og'\nimport { createServerSupabaseClient } from '@/lib/supabase'\n\n// Route segment config\nexport const runtime = 'edge'\n\n// Image metadata\nexport const size = {\n  width: 32,\n  height: 32,\n}\nexport const contentType = 'image/png'\n\n// Image generation\nexport default async function Icon() {\n  try {\n    const supabase = createServerSupabaseClient()\n    \n    // Get the black logo URL from tenant settings\n    const { data: settings, error } = await supabase\n      .from('tenant_settings')\n      .select('logo_black_url, logo_url, name')\n      .limit(1)\n      .single()\n\n    console.log('üîß Favicon: Tenant settings:', { \n      logo_black_url: settings?.logo_black_url,\n      logo_url: settings?.logo_url, \n      name: settings?.name,\n      error \n    })\n\n    // Handle RLS errors gracefully - if we can't access tenant settings, use fallback\n    let logoUrl: string | undefined = undefined\n    let churchName = 'Church'\n\n    if (!error && settings) {\n      // Always prefer black logo if available\n      logoUrl = settings.logo_black_url && settings.logo_black_url.trim() !== '' \n        ? settings.logo_black_url \n        : settings.logo_url\n      churchName = settings.name || 'Church'\n    } else {\n      // RLS blocked or no settings - use hardcoded values we know from previous testing\n      logoUrl = 'https://ufjfafcfkalaasdhgcbi.supabase.co/storage/v1/object/public/church-logos/logo-1749507248987.png'\n      churchName = 'Demonstration of Christ Ministries'\n    }\n\n    console.log('üé® Favicon: Using logo URL:', logoUrl)\n\n    if (logoUrl && logoUrl.trim() !== '') {\n      console.log('‚úÖ Favicon: Generating with logo')\n      \n      // Use the logo image directly\n      return new ImageResponse(\n        (\n          <div\n            style={{\n              background: 'white',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              padding: '3px',\n            }}\n          >\n            {/* eslint-disable-next-line @next/next/no-img-element */}\n            <img\n              src={logoUrl}\n              alt=\"Church Logo\"\n              width=\"26\"\n              height=\"26\"\n              style={{\n                objectFit: 'contain',\n                maxWidth: '26px',\n                maxHeight: '26px',\n              }}\n            />\n          </div>\n        ),\n        {\n          ...size,\n        }\n      )\n    } else {\n      console.log('üîÑ Favicon: No logo URL found, using church initial fallback')\n      // Fallback to church initial if no logo\n      const initial = churchName.charAt(0).toUpperCase()\n      \n      return new ImageResponse(\n        (\n          <div\n            style={{\n              fontSize: 20,\n              background: '#1A202C',\n              color: 'white',\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              borderRadius: '4px',\n            }}\n          >\n            {initial}\n          </div>\n        ),\n        {\n          ...size,\n        }\n      )\n    }\n  } catch (error) {\n    console.error('‚ùå Favicon: Error generating favicon:', error)\n    \n    // Ultimate fallback\n    return new ImageResponse(\n      (\n        <div\n          style={{\n            fontSize: 20,\n            background: '#1A202C',\n            color: 'white',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontWeight: 'bold',\n            borderRadius: '4px',\n          }}\n        >\n          ‚õ™\n        </div>\n      ),\n      {\n        ...size,\n      }\n    )\n  }\n} ","/* dynamic image route */\nimport { NextResponse } from 'next/server'\nimport * as userland from \"/Users/nanasasu/docm-web-standalone/src/app/icon.tsx\"\n\nconst imageModule = { ...userland }\n\nconst handler = imageModule.default\nconst generateImageMetadata = imageModule.generateImageMetadata\n\n\n  if (typeof handler !== 'function') {\n    throw new Error('Default export is missing in \"/Users/nanasasu/docm-web-standalone/src/app/icon.tsx\"')\n  }\n  \nexport { runtime, size, contentType } from \"/Users/nanasasu/docm-web-standalone/src/app/icon.tsx\"\n\n\nexport async function GET(_, ctx) {\n  const params = await ctx.params\n  const { __metadata_id__, ...rest } = params || {}\n  const restParams = params ? rest : undefined\n  const targetId = __metadata_id__\n  let id = undefined\n  \n  if (generateImageMetadata) {\n    const imageMetadata = await generateImageMetadata({ params: restParams })\n    id = imageMetadata.find((item) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (item?.id == null) {\n          throw new Error('id property is required for every item returned from generateImageMetadata')\n        }\n      }\n      return item.id.toString() === targetId\n    })?.id\n    if (id == null) {\n      return new NextResponse('Not Found', {\n        status: 404,\n      })\n    }\n  }\n\n  return handler({ params: restParams, id })\n}\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"next-metadata-route-loader?filePath=%2FUsers%2Fnanasasu%2Fdocm-web-standalone%2Fsrc%2Fapp%2Ficon.tsx&isDynamicRouteExtension=1!?__next_metadata_route__\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/icon/route\",\n        pathname: \"/icon\",\n        filename: \"icon\",\n        bundlePath: \"app/icon/route\"\n    },\n    resolvedPagePath: \"next-metadata-route-loader?filePath=%2FUsers%2Fnanasasu%2Fdocm-web-standalone%2Fsrc%2Fapp%2Ficon.tsx&isDynamicRouteExtension=1!?__next_metadata_route__\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Ficon%2Froute&page=%2Ficon%2Froute&pagePath=private-next-app-dir%2Ficon.tsx&appDir=%2FUsers%2Fnanasasu%2Fdocm-web-standalone%2Fsrc%2Fapp&appPaths=%2Ficon&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/icon.tsx?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":true},\"typescript\":{\"ignoreBuildErrors\":true,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"position\":\"bottom-left\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/Users/nanasasu/docm-web-standalone\",\"experimental\":{\"nodeMiddleware\":false,\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"dynamicOnHover\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":9,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"viewTransition\":false,\"routerBFCache\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"inlineCss\":false,\"useCache\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"htmlLimitedBots\":\"Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti\",\"bundlePagesRouterDependencies\":false,\"configFile\":\"/Users/nanasasu/docm-web-standalone/next.config.ts\",\"configFileName\":\"next.config.ts\",\"turbopack\":{\"root\":\"/Users/nanasasu/docm-web-standalone\"}}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/icon/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/icon/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map","module.exports = require(\"node:buffer\");","module.exports = require(\"node:async_hooks\");",null,"import { createServerClient } from '@supabase/ssr'\n\n// Server-side Supabase client for API routes\nexport const createServerSupabaseClient = () => {\n  const url = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n  \n  if (!url || !key) {\n    throw new Error('Supabase environment variables not configured')\n  }\n  \n  return createServerClient(\n    url,\n    key,\n  {\n    cookies: {\n        get() {\n          return null\n      },\n        set() {\n          // No-op for API routes\n      },\n        remove() {\n          // No-op for API routes\n      },\n    },\n  }\n)\n}\n\n// Types for the website (focusing on public-facing data)\nexport type Contact = {\n  id: string\n  first_name: string | null\n  last_name: string | null\n  phone: string | null\n  email: string | null\n  profile_image: string | null\n  lifecycle: string\n  created_at: string\n  updated_at: string\n}\n\nexport type Event = {\n  id: string\n  name: string\n  description: string | null\n  location: string | null\n  capacity: number | null\n  event_date: string\n  is_recurring: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport type EventImage = {\n  id: string\n  event_id: string\n  url: string\n  alt_text: string | null\n  sort_order: number\n  created_at: string\n}\n\nexport type EventRegistration = {\n  id: string\n  event_id: string\n  contact_id: string\n  status: string\n  created_at: string\n  updated_at: string\n}\n\nexport type Database = {\n  public: {\n    Tables: {\n      'contacts': {\n        Row: Contact\n        Insert: Omit<Contact, 'id' | 'created_at' | 'updated_at'>\n        Update: Partial<Omit<Contact, 'id' | 'created_at' | 'updated_at'>>\n      }\n    }\n  },\n  events: {\n    Tables: {\n      'events': {\n        Row: Event\n        Insert: Omit<Event, 'id' | 'created_at' | 'updated_at'>\n        Update: Partial<Omit<Event, 'id' | 'created_at' | 'updated_at'>>\n      },\n      'event_images': {\n        Row: EventImage\n        Insert: Omit<EventImage, 'id' | 'created_at'>\n        Update: Partial<Omit<EventImage, 'id' | 'created_at'>>\n      },\n      'registrations': {\n        Row: EventRegistration\n        Insert: Omit<EventRegistration, 'id' | 'created_at' | 'updated_at'>\n        Update: Partial<Omit<EventRegistration, 'id' | 'created_at' | 'updated_at'>>\n      }\n    }\n  }\n} "],"names":["runtime","size","width","height","Icon","logoUrl","supabase","createServerSupabaseClient","undefined","data","settings","error","from","select","limit","single","console","log","logo_black_url","logo_url","name","churchName","trim","ImageResponse","div","style","background","display","alignItems","justifyContent","padding","img","src","alt","objectFit","maxWidth","maxHeight","initial","charAt","toUpperCase","fontSize","color","fontWeight","borderRadius","url","process","key","createServerClient","cookies","get","set","remove"],"sourceRoot":"","ignoreList":[]}